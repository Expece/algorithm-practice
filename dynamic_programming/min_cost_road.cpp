// status : yes
#include <iostream>
using namespace std;
/*
                Самый дешевый путь

    Нужно найти минимальную стоимость пути из 
    верхнего левого угла в нижний правый угол.
    Двигаться можно вправо и вниз.
    
    Вводятся два числа N x M. Затем идет N строк по M чисел в каждой.
    Выведите минимальную стоимость пути.
*/
int main() {
    int n, m;
    cin >> n >> m;
    int data[n][m] = {0};
    // инициализвация матрицы
    for (int i = 0 ; i < n ; i++)
        for (int j = 0 ; j < m ; j++)
            cin >> data[i][j];

    // устанавливаю начальные стоимости пути по строкам 1 - n
    for (int i = 1 ; i < n ; i++)
        data[i][0] += data[i-1][0];

    // устанавливаю начальные стоимости пути по колонкам 1 - m
    for (int i = 1 ; i < m ; i++) 
        data[0][i] += data[0][i-1];

    // устанавливаю минимальные стоимости пути
    // в каждую клетку
    for (int i = 1; i < n; i++) {
        for (int j = 1; j < m; j++) {
            int a1 = data[i - 1][j];
            int a2 = data[i][j - 1];
            data[i][j] += std::min(a1, a2);
        }
    }

    // вывожу нужную
    cout << data[n - 1][m - 1];

    return 0;
}